[{"title":"centos系统通过yum命令安装tomcat，jdk，搭建javaweb环境","date":"2017-05-08T09:45:37.000Z","path":"2017/05/08/web环境/","text":"配jdk环境详细可以看此链接：http://jingyan.baidu.com/article/4853e1e51d0c101909f72607.html 1.输入下面的命令查看jdk是否安装 yum list installed |grep java 2.查看yum库中的java安装包 yum -y list java* 3.使用yum安装java环境,选择适当的java版本，这里选择1.7 yum -y install java-1.7.0-openjdk* 当显示为complete就已经安装好，可以输入java或javac来查看 配tomcat环境详细可看此链接： http://my.oschina.net/u/593517/blog/304326 和 http://www.xianren.org/system/centos6-4-yum-mysql-jdk-tomcat.html 1.查看可以安装的tomcat包 yum list available tomcat* 2.安装tomcat,选择你要安装tomcat版本 yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps 3.通过下面的命令可以启动和停止tomcat 启动 service tomcat6 start 停止 service tomcat6 stop 重启 service tomcat6 restart 配mysql环境详细可看此链接：http://jingyan.baidu.com/article/acf728fd10c3d6f8e510a3ef.html http://www.xianren.org/system/centos6-4-yum-mysql-jdk-tomcat.html 1.列出可以安装的mysql包 yum list available mysql* 2.安装mysql客户端 yum install mysql 3.安装mysql 服务器端 yum install mysql-serveryum install mysql-devel 4.启动服务和停止服务 service mysql(d) startservice mysql(d) stop 5.通过yum安装的话，要通过下面命令创建数据库的密码,默认密码为空 mysqladmin -u root password ‘新密码’ 6.创建密码后，可通过下面的命令登陆数据库了 mysql(d) -u -root -p ‘密码’ 7.可通过下面命令查看端口 netstat -antp","tags":[]},{"title":"centos6安装gitlab","date":"2017-05-08T03:37:45.000Z","path":"2017/05/08/centos6安装gitlab/","text":"centos6安装gitlab教程 安装并配置必要的依赖 1234sudo yum install curl openssh-server openssh-clients postfix croniesudo service postfix startsudo chkconfig postfix onsudo lokkit -s http -s ssh 添加GitLab包服务器并安装 12curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bashsudo yum install gitlab-ce 3.配置并启动GitLab 1sudo gitlab-ctl reconfigure","tags":[]},{"title":"设置/修改root密码","date":"2017-05-08T01:47:01.000Z","path":"2017/05/08/设置-修改root密码/","text":"设置/修改root密码1passwd root","tags":[]},{"title":"android获取项目sha1代码","date":"2017-05-04T02:27:54.000Z","path":"2017/05/04/android获取项目sha1代码/","text":"获取项目sha112345678910111213141516171819202122232425public static String sHA1(Context context) &#123; try &#123; PackageInfo info = context.getPackageManager().getPackageInfo( context.getPackageName(), PackageManager.GET_SIGNATURES); byte[] cert = info.signatures[0].toByteArray(); MessageDigest md = MessageDigest.getInstance(&quot;SHA1&quot;); byte[] publicKey = md.digest(cert); StringBuffer hexString = new StringBuffer(); for (int i = 0; i &lt; publicKey.length; i++) &#123; String appendString = Integer.toHexString(0xFF &amp; publicKey[i]) .toUpperCase(Locale.US); if (appendString.length() == 1) hexString.append(&quot;0&quot;); hexString.append(appendString); hexString.append(&quot;:&quot;); &#125; String result = hexString.toString(); return result.substring(0, result.length()-1); &#125; catch (PackageManager.NameNotFoundException e) &#123; e.printStackTrace(); &#125; catch (NoSuchAlgorithmException e) &#123; e.printStackTrace(); &#125; return null; &#125;","tags":[]},{"title":"天空广告SDK集成文档","date":"2017-05-02T08:20:49.000Z","path":"2017/05/02/天空广告SDK集成文档/","text":"天空广告SDK集成文档 请在应用中嵌入以下追踪代码，每个应用具有唯一Appkey，该应用的Appkey为 53f417b2fd98c5ff28024176 设置Appkey 在AndroidManifest.xml文件application标签下添加 123&lt;meta-data android:name=\"TK_APPKEY\" android:value=\"你的appkey\"/&gt; 或者在java中设置appkey，需要在SDK.init()之后调用。 1ADSDK.setAppKey(\"你的appkey\"); AndroidManifest.xml，添加权限 123456&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;&lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /&gt;&lt;uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" /&gt;&lt;uses-permission android:name=\"android.permission.READ_PHONE_STATE\" /&gt;&lt;uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\"/&gt;&lt;uses-permission android:name=\"android.permission.LOCAL_MAC_ADDRESS\"/&gt; 在应用程序的 Application类的onCreate方法中初始化SDK,并发送广告追踪。 12ADSDK.init(this);ADSDK.sendAdTrack();","tags":[]},{"title":"tomcat 与 nginx，apache的区别是什么？","date":"2017-04-28T08:36:00.000Z","path":"2017/04/28/tomcat-与-nginx，apache的区别是什么？/","text":"HTTP服务器本质上也是一种应用程序——它通常运行在服务器之上，绑定服务器的IP地址并监听某一个tcp端口来接收并处理HTTP请求，这样客户端（一般来说是IE, Firefox，Chrome这样的浏览器）就能够通过HTTP协议来获取服务器上的网页（HTML格式）、文档（PDF格式）、音频（MP4格式）、视频（MOV格式）等等资源. 相同点三者都是web server Apache是Apache软件基金会下的一个项目——Apache HTTP Server Project； Nginx同样也是一款开源的HTTP服务器软件（当然它也可以作为邮件代理服务器、通用的TCP代理服务器）。 Tomcat运行在JVM之上，它和HTTP服务器一样，绑定IP地址并监听TCP端口，同时还包含以下指责： 管理Servlet程序的生命周期 将URL映射到指定的Servlet进行处理 与Servlet程序合作处理HTTP请求——根据HTTP请求生成HttpServletResponse对象并传递给Servlet进行处理，将Servlet中的HttpServletResponse对象生成的内容返回给浏览器. 不同点严格的来说，Apache/Nginx 应该叫做「HTTP Server」；而 Tomcat 则是一个「Application Server」，或者更准确的来说，是一个「Servlet/JSP」应用的容器（Ruby/Python 等其他语言开发的应用也无法直接运行在 Tomcat 上）。 一般的运用场景下，apache和nginx在负载均衡里是前端服务器，用来处理请求的转发（反向代理等）；绝大部分时候他们本身并不会运行项目。tomcat和jetty，WebLogic是后端服务器，是直接用来运行项目的容器。简单来说就是你发出一个请求，先经过apache或nginx，他们会合理地把请求分配到后台比较不忙的tomcat或jetty。tomcat或jetty会把请求处理好返回给apache或nginx，然后a或n会把最终的请求结果告诉你。当然，如果是一些静态的数据，apache和nginx就可以直接返回给你了。 总结三者都是web server，只是侧重点不同。 Nginx的职责：作为前端服务器，处理请求转发，使用场景，做应用服务器的转发（tomcat），邮件代理服务器、通用的TCP代理服务器。 tomcat后端服务器：直接运行项目的容器（java），一般不会直接去处理客户端的请求，毕竟tomcat并发量不是很大，静态的页面交给前端服务器，执行动态部分，起到资源合理配置，减少服务器压力。 apache也是作为前端服务器，不过都有插件支持动态编程语言处理，如 apache和php结合使用，apache和tomcat等。","tags":[]},{"title":"centos下Nginx安装与配","date":"2017-04-28T07:39:10.000Z","path":"2017/04/28/Nginx安装与配/","text":"Nginx是一款轻量级的网页服务器、反向代理服务器。相较于Apache、lighttpd具有占有内存少，稳定性高等优势。它最常的用途是提供反向代理服务。 安装在Centos下，yum源不提供nginx的安装，可以通过切换yum源的方法获取安装。也可以通过直接下载安装包的方法，以下命令均需root权限执行： 安装依赖库首先安装必要的库（nginx 中gzip模块需要 zlib 库，rewrite模块需要 pcre 库，ssl 功能需要openssl库）。 1$ yum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel 安装nginx1234567$ cd /usr/local/$ wget http://nginx.org/download/nginx-1.8.0.tar.gz$ tar -zxvf nginx-1.8.0.tar.gz$ cd nginx-1.8.0 $ ./configure --prefix=/usr/local/nginx $ make$ make install 在–prefix后面接以下命令:指定nginx安装目录1--prefix=/usr/local/nginx 启动1$ /usr/local/nginx/sbin/nginx 检查是否启动成功： 打开浏览器访问此机器的 IP，如果浏览器出现 Welcome to nginx! 则表示 Nginx 已经安装并运行成功。 重启：1$ /usr/local/nginx/sbin/nginx –s reload 停止：1$ /usr/local/nginx/sbin/nginx –s stop 测试配置文件是否正常：1$ /usr/local/nginx/sbin/nginx –t 强制关闭：1$ pkill nginx 参考链接：Centos下 Nginx安装与配置nginx服务器安装及配置文件详解","tags":[{"name":"Nginx","slug":"Nginx","permalink":"http://blog.hsy123.tk/tags/Nginx/"}]},{"title":"mac终端ssh登录远程主机","date":"2017-04-28T06:59:55.000Z","path":"2017/04/28/mac终端ssh登录远程主机/","text":"备忘命令1ssh user@ip -p port username:远程主机用户ip:主机ipport: 端口 默认22eg .ssh root@hsy123.tk -p 26910","tags":[{"name":"linux","slug":"linux","permalink":"http://blog.hsy123.tk/tags/linux/"}]},{"title":"hexo爬坑","date":"2017-04-27T07:39:29.000Z","path":"2017/04/27/hexo爬坑/","text":"根_config.yml文件可以设置网站的常用属性。title: #设置网站的标题 eg.Hubery&apos;s Blog subtitle: #设置副标题 eg .求知若饥 虚心若愚 description: # 设置网站的描述 求知若饥 虚心若愚 author: # 作者 Hubery Huang language: #语言 zh-CN keywords: #关键字 android, 移动, app, 技术 设置部署到gitdeploy: type: #这个有几个部署方式 ，推荐用git repository: #部署的地址 https://github.com/huangsongyan/huangsongyan.github.io.git branch: #部署分支 master 常用插件统计插件：百度统计，谷歌统计 评论：多说评论 Disqus评论 来必力评论 友言评论 网易云跟帖评论 畅言评论","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.hsy123.tk/tags/hexo/"}]},{"title":"hexo搭建填坑,安装错误及解决方法","date":"2017-04-26T14:28:21.000Z","path":"2017/04/26/hexo搭建填坑-安装错误及解决方法/","text":"hexo搭建的需要的环境 node.js 没有安装node.js的童鞋，具体怎么安装在这里就不提供教程了，提供官网地址 链接地址 git 官网地址 链接地址 hexo安装 安装完前面的两个软件就可以进行安装hexo 打开终端执行下面的代码 123456789npm install hexo-cli -ghexo init blogcd blognpm installhexo server theme下载替换hexo官网有提供很多样式主题提供下载，具体可到官网下载。 不过这里可能有个坑，下载下来的theme的含有.git，本来自己项目也含有.git。就不会要子项目的git上传过去，故下来可以删除主题的.git文件夹或者修改theme的remote地址,再把整个项目上传到git上去。 从git克隆自己的blog项目克隆下来后，要注意有没有下载到相应的主题，不然运行会出现空界面。 接着可以进入项目目录，执行 1npm install 安装相关依赖. 最后执行 1hexo server","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.hsy123.tk/tags/hexo/"}]}]